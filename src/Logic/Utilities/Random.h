#ifndef RANDOM_H
#define RANDOM_H

#include <random>

/**
 * @class Random
 * @brief A singleton class for generating random numbers.
 *
 * The Random class provides utility functions to generate random numbers, specifically
 * floating-point numbers, within a specified range. It uses the Mersenne Twister (std::mt19937)
 * engine for generating random numbers and the C++ standard library's random distributions.
 */
class Random {
public:
    /**
     * @brief Default constructor to initialize the random number generator.
     *
     * The constructor initializes the Mersenne Twister engine using a random seed
     * generated by std::random_device.
     */
    Random();

    /**
     * @brief Default destructor for the Random class.
     */
    ~Random() = default;

    /**
     * @brief Deleted copy constructor to prevent copying of the Random object.
     *
     * The Random class follows the singleton pattern and does not allow copying.
     */
    Random(const Random&) = delete;

    /**
     * @brief Deleted copy assignment operator to prevent assignment of the Random object.
     *
     * The Random class follows the singleton pattern and does not allow assignment.
     */
    Random& operator=(const Random&) = delete;

    /**
     * @brief Retrieves the singleton instance of the Random class.
     *
     * This static method ensures that only one instance of the Random class is created
     * throughout the lifetime of the program, following the singleton pattern.
     *
     * @return A reference to the singleton Random instance.
     */
    static Random& getInstance();

    /**
     * @brief Generates a random floating-point number within a specified range.
     *
     * This method generates a random floating-point number between the provided `min` and `max`
     * values using a uniform real distribution. It ensures that each number in the range has an
     * equal probability of being selected.
     *
     * @param min The minimum value of the range.
     * @param max The maximum value of the range.
     *
     * @return A random floating-point number between `min` and `max`.
     */
    float getRandomFloat(float min, float max);

private:
    std::mt19937 gen; ///< Mersenne Twister engine for generating random numbers.
};

#endif // RANDOM_H
